// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiceXpert.Infrastructure.DbContexts;

#nullable disable

namespace ServiceXpert.Infrastructure.Migrations
{
    [DbContext(typeof(SxpDbContext))]
    partial class SxpDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServiceXpert.Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IssueId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CommentId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("CommentId"), false);

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("ServiceXpert.Domain.Entities.Issue", b =>
                {
                    b.Property<int>("IssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IssueId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(4096)");

                    b.Property<int>("IssuePriorityId")
                        .HasColumnType("int");

                    b.Property<int>("IssueStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.HasKey("IssueId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IssueId"));

                    b.ToTable("Issue", (string)null);
                });

            modelBuilder.Entity("ServiceXpert.Domain.Entities.IssuePriority", b =>
                {
                    b.Property<int>("IssuePriorityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IssuePriorityId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(64)");

                    b.HasKey("IssuePriorityId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IssuePriorityId"));

                    b.ToTable("IssuePriority", (string)null);

                    b.HasData(
                        new
                        {
                            IssuePriorityId = 1,
                            CreateDate = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifyDate = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Outage"
                        },
                        new
                        {
                            IssuePriorityId = 2,
                            CreateDate = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifyDate = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Critical"
                        },
                        new
                        {
                            IssuePriorityId = 3,
                            CreateDate = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifyDate = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "High"
                        },
                        new
                        {
                            IssuePriorityId = 4,
                            CreateDate = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifyDate = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Medium"
                        },
                        new
                        {
                            IssuePriorityId = 5,
                            CreateDate = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifyDate = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Low"
                        });
                });

            modelBuilder.Entity("ServiceXpert.Domain.Entities.IssueStatus", b =>
                {
                    b.Property<int>("IssueStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IssueStatusId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(64)");

                    b.HasKey("IssueStatusId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IssueStatusId"));

                    b.ToTable("IssueStatus", (string)null);

                    b.HasData(
                        new
                        {
                            IssueStatusId = 1,
                            CreateDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifyDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "New"
                        },
                        new
                        {
                            IssueStatusId = 2,
                            CreateDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifyDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "For Analysis"
                        },
                        new
                        {
                            IssueStatusId = 3,
                            CreateDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifyDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "In Progress"
                        },
                        new
                        {
                            IssueStatusId = 4,
                            CreateDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifyDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Resolved"
                        },
                        new
                        {
                            IssueStatusId = 5,
                            CreateDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifyDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("ServiceXpert.Domain.Entities.Comment", b =>
                {
                    b.HasOne("ServiceXpert.Domain.Entities.Issue", "Issue")
                        .WithMany("Comments")
                        .HasForeignKey("IssueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Issue");
                });

            modelBuilder.Entity("ServiceXpert.Domain.Entities.Issue", b =>
                {
                    b.HasOne("ServiceXpert.Domain.Entities.IssuePriority", "IssuePriority")
                        .WithOne()
                        .HasForeignKey("ServiceXpert.Domain.Entities.Issue", "IssuePriorityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServiceXpert.Domain.Entities.IssueStatus", "IssueStatus")
                        .WithOne()
                        .HasForeignKey("ServiceXpert.Domain.Entities.Issue", "IssueStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IssuePriority");

                    b.Navigation("IssueStatus");
                });

            modelBuilder.Entity("ServiceXpert.Domain.Entities.Issue", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
